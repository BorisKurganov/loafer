Домашние задание для курса Stepic Web-фреймворк Flask: введение.

Приложение loafer (бездельник), приложение представляет из себя минималистичную игру.
По сути это просто кнопка к которой "прикручен" счётчик нажатий.
Можно жать на кнопку и увеличивать значение счётчика.
Результаты можно сохранить в базе данных если вы предварительно зарегистрировались.
Можно продолжить накручивать счётчик, если войти.
Прогресс можно сохранять нажатием на кнопку "сохранить".

Краткое описание:

Приложение состоит из 4 страниц:

На первой странице расположены кнопки:
"Бездельничать" - запускает процесс игры с нуля без регистрации и смс, но прогресс сохранять нельзя.
"Войти" - после введения имени, почты и пароля продолжить с ранее сохранённого значения
"Зарегистрироваться"
"Смотреть доску почёта" -  переход на страницу с топ 10 игроков.

На второй странице собственно счётчик, кнопка +1, кнопки "Сохранить" и "На главную".

Третья страница - форма входа и регистрации 

Четвёртая страница - доска почёта, т. е. таблица с топ 10 игроков.

Касательно требований к проверке:
1) В проекте присутствует базовый шаблон, остальные 4 шаблона наследуются от него.
2) В проекте используются css стили из bootstrap 3, счётчик реализован на JS, чтобы не перезагружать страницу при каждом нажатии. 
3) Форма регистрации она же форма входа выполнена с использованием расширения Flask-WTF.
4) Форма использует 4 различных поля: StringField, SubmitField, PasswordField, BooleanField.
5) Форма использует валидаторы: DataRequired, Email, InputRequired.
6) В проекте 7 функций представления, динамический маршрут принимает функция  get_count, которая обновляет в базе данных значение счётчика.
7) POST-запросы принимают функции registration, sign_in и get_count.


Что можно улучшить или сделать по другому.

1) Функции представления страниц регистрации (registration)  и входа ( sign_in) практически одинаковые,
можно обойтись одной функцией с двумя декораторами.
2) Пароли пользователей хранятся в базе данных как строки,
в реальных проектах так делать нельзя, нужно хранить хеши паролей,
но для учебного проекта, я посчитал это допустимым.

Что ещё:

Практически во всех гайдах и учебниках, которые я видел для работы
с базой данных используется ORM SQLAlchemy, однако я посчитал применение
этого фреймворка (или что это?) избыточным, т.к. база данных приложения по сути просто таблица.
Моё приложение использует базу данных sqlite3 и одноимённую библиотеку python.
Функции для работы с базой данных собраны в файле db_function.py

Работа галки "Запомнить меня" зависит от настроек куки вашего браузера

Учётные данные для тестового пользователя:
имя: test
почта: test@test.py
пароль: 123

Спасибо за идею приложени slpdmn с Хабр Q&A
